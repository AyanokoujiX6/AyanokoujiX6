// ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุงููุทููุจุฉ
const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

// ุฅูุดุงุก ุงูุจูุช ูุน ุญูุธ ุงูุฌูุณุฉ ุญุชู ูุง ุชุญุชุงุฌ ููุณุญ QR ูู ูู ูุฑุฉ
const client = new Client({
    authStrategy: new LocalAuth()
});

// ุนูุฏ ุธููุฑ ุฑูุฒ QRุ ูุชู ุทุจุงุนุชู ููุณุญู ุนุจุฑ ูุงุชุณุงุจ
client.on('qr', (qr) => {
    console.log('ุงูุณุญ ูุฐุง ุงูุฑูุฒ ูู ูุงุชุณุงุจ ูุชุดุบูู ุงูุจูุช:');
    qrcode.generate(qr, { small: true });
});

// ุนูุฏ ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ
client.on('ready', () => {
    console.log('โ ุงูุจูุช ูุนูู ุงูุขู!');
});

// ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ
client.on('message', message => {
    let text = message.body.toLowerCase(); // ุชุญููู ุงููุต ุฅูู ุญุฑูู ุตุบูุฑุฉ

    if (text === 'ูุฑุญุจุง') {
        message.reply('ุฃููุงู ูุณููุงู ุจู! ๐ ููู ูููููู ูุณุงุนุฏุชูุ');
    } else if (text === 'ุงูููุช') {
        let now = new Date().toLocaleTimeString();
        message.reply(`๐ ุงูููุช ุงูุญุงูู: ${now}`);
    } else if (text === 'ููุชุฉ') {
        message.reply('๐ ูุฑุฉ ูุงุญุฏ ุฑุงุญ ููุจูุงูุฉ ูุงูู ุนูุฏู ุณูุฑุ ูุงูู ูุนูุ ูุงูู ุทูุจ ููุด ูู ุญููุ');
    } else if (text === 'ููุดุฆ ุงูุจูุชุ') {
        message.reply('ุฃูุง ุจูุช ูุงุชุณุงุจ ุชู ุฅูุดุงุฆู ุจูุงุณุทุฉ ูุจุฑูุฌ ูุญุชุฑู! ๐');
    }
});

// ุชุดุบูู ุงูุจูุช
client.initialize();

// ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุงููุทููุจุฉ
const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

// ุฅูุดุงุก ุงูุจูุช ูุน ุญูุธ ุงูุฌูุณุฉ ุญุชู ูุง ุชุญุชุงุฌ ููุณุญ QR ูู ูู ูุฑุฉ
const client = new Client({
    authStrategy: new LocalAuth()
});

// ุนูุฏ ุธููุฑ ุฑูุฒ QRุ ูุชู ุทุจุงุนุชู ููุณุญู ุนุจุฑ ูุงุชุณุงุจ
client.on('qr', (qr) => {
    console.log('ุงูุณุญ ูุฐุง ุงูุฑูุฒ ูู ูุงุชุณุงุจ ูุชุดุบูู ุงูุจูุช:');
    qrcode.generate(qr, { small: true });
});

// ุนูุฏ ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ
client.on('ready', () => {
    console.log('โ ุงูุจูุช ูุนูู ุงูุขู!');
});

// ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ
client.on('message', message => {
    let text = message.body.toLowerCase(); // ุชุญููู ุงููุต ุฅูู ุญุฑูู ุตุบูุฑุฉ

    if (text === 'ูุฑุญุจุง') {
        message.reply('ุฃููุงู ูุณููุงู ุจู! ๐ ููู ูููููู ูุณุงุนุฏุชูุ');
    } else if (text === 'ุงูููุช') {
        let now = new Date().toLocaleTimeString();
        message.reply(`๐ ุงูููุช ุงูุญุงูู: ${now}`);
    } else if (text === 'ููุชุฉ') {
        message.reply('๐ ูุฑุฉ ูุงุญุฏ ุฑุงุญ ููุจูุงูุฉ ูุงูู ุนูุฏู ุณูุฑุ ูุงูู ูุนูุ ูุงูู ุทูุจ ููุด ูู ุญููุ');
    } else if (text === 'ููุดุฆ ุงูุจูุชุ') {
        message.reply('ุฃูุง ุจูุช ูุงุชุณุงุจ ุชู ุฅูุดุงุฆู ุจูุงุณุทุฉ ูุจุฑูุฌ ูุญุชุฑู! ๐');
    }
});

// ุชุดุบูู ุงูุจูุช
client.initialize();

